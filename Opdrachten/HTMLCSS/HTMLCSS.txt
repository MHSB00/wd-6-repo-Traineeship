===========
VRAGEN HTML
===========

Implicit ARIA roles:
Header
    banner, or no corresponding role if a descendant of an article, aside, main, nav or section element, or an element with role=article, complementary, main, navigation or region
Footer
    contentinfo, or no corresponding role if a descendant of an article, aside, main, nav or section element, or an element with role=article, complementary, main, navigation or region
Section
    region if the element has an accessible name, otherwise no corresponding role
Aside
    complementary
Input
    The input abstract role is a generic type of widget that allows user input.

Wat is HTML?
    HTML staat voor HyperText Markup Language, Het is de standaard taal voor webpagina's waarmee de structuur van de pagina wordt bepaald. 

Hoe ziet de basis-structuur van HTML eruit?
    <!DOCTYPE html> definieert dat het een html pagina betreft
    <html> root element van de pagina
    <head> bevat de meta data van de pagina
    <title> specificeert de titel van de pagina
    <body> definieert de body van de pagina, bevat alle zichtbare content

Wat is een anchor tag?
    is een verwijzing naar een andere pagina of een ander gedeelte op dezelfde pagina

Noem een aantal nieuwe functionaliteiten van HTML5
    https://www.geeksforgeeks.org/top-10-new-features-of-html5/
    1. Audio / video -> embedden
    2. Vector graphics -> maken van vector figuren die interactable en animeerbaar zijn
    3. Header and Footer -> Header is standaard aan het begin en footer aan het eind, de browser weet welke als eerste geladen moet worden
    4. Figure and Figcaption -> <figure> for markup a photo in a document, <figcaption> define caption for a <figure> element
    5. <nav> tag -> defines a set of navigational links.
    6. <progress> tag -> is used to check the progress of a task during the excecution
    7. Placeholder attribute -> specifies a short hint that describes the expected value of an input field/text animeerbaar
    8. Email attribute -> When the input type in the form set as email, then the browser gets the instruction from the code to write a valid format email. The input email id is automatically validated to check the format of the email id is correct or not.
    9. Storage -> In the case of HTML, we can use the browser as the temporary storage whereas, in the case of HTML5, application cache, web SQL database, and web storage is used.
 
Wat zijn HTML attributen?
    HTML attributes provide addition information about HTML elements (https://www.w3schools.com/html/html_attributes.asp)
    tag <a> atrribute href -> <a href=''></a>

Wat is HTML semantics?
    Semantic elements - elements with a meaning (https://www.w3schools.com/html/html5_semantic_elements.asp)
    non-semantic <div> <span>
    semantic <aside> <details> <figcaption> <figure> <footer> <header> <main> <mark> <nav> <section> <summary> <time>

Waarvoor worden meta tags gebruikt?
    (https://www.w3schools.com/tags/tag_meta.asp)
    <meta> tag defines metadata about a HTML document, <meta> tags always go inside the <head> element, and are typically used to specify character set, page description, keywords, author of the document, and viewport settings.

Wat is een nested element?
    An element inside another element (https://www.tutorialbrain.com/html_tutorial/html_elements/)
    <p>This is <b>bold</b> text</p>

Wat is het verschil tussen inline- en blok-elementen?
    (https://www.w3schools.com/html/html_blocks.asp)
    Every HTML element has a default display value, depending on what type of element it is.
    There are two display values: block and inline.
    A block-level element always starts on a new line, and the browsers automatically add some space (a margin) before and after the element.
    A block-level element always takes up the full width available (stretches out to the left and right as far as it can).

    An inline element does not start on a new line.
    An inline element only takes up as much width as necessary.

Wat is accessibility?
    (https://developer.mozilla.org/en-US/docs/Learn/Accessibility/HTML)
    A great deal of web content can be made accessible just by making sure the correct Hypertext Markup Language elements are used for the correct purpose at all times.
    Use semantic HTML:
    1. Easier to develop with
    2. Better on mobile
    3. Good for SEO

===========
VRAGEN CSS
===========

1. Je kunt op 3 verschillende manieren CSS in je HTML inladen. Op welke 3 manieren kun je dat doen? Leg ook voor elke wijze uit wat het precies inhoud. (https://www.w3schools.com/css/css_howto.asp)
- External: With an external style sheet, you can change the look of an entire website by changing just one file!
            Each HTML page must include a reference to the external style sheet file inside the <link> element, inside the head section.-> <link rel="stylesheet" href="mystyle.css">

- Internal: An internal style sheet may be used if one single HTML page has a unique style.
            The internal style is defined inside the <style> element, inside the head section. ->
            <head>
                <style>
                    body {
                    background-color: linen;
                    }

                    h1 {
                    color: maroon;
                    margin-left: 40px;
                    }
                </style>
            </head>

- Inline: Inline styles are defined within the "style" attribute of the relevant element ->
          <h1 style="color:blue;text-align:center;">This is a heading</h1>

2. CSS pas je toe met een bepaalde syntax. Hoe ziet zo'n syntax eruit? Kun je ook uitleggen wat elk element uit de syntax betekent?
    (https://www.w3schools.com/css/css_syntax.asp)
    Selector {properties: values;}
    Declaration: everything between {}, contains one or more  declarations separated with a ;
    CSS-selector points to the HTML element you want to style

3. Er zijn verschillende selectors, bijvoorbeeld; (https://www.w3schools.com/css/css_selectors.asp)
    (https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors)
    (https://www.w3schools.com/css/css_combinators.asp)
    -type selectors
    -class selectors
    -ID selectors
    -descendant selectors
    Maak van de bovengenoemde selectors voorbeelden. Geef in je antwoord ook aan wat de voordelen zijn van elke selector.

    Type-selector: The CSS type selector matches elements by node name. In other words, it selects all elements of the given type within a document.
    /* All <a> elements. */
    a {
    color: red;
    }

    Class-selector: The class selector selects HTML elements with a specific class attribute.To select elements with a specific class, write a period (.) character, followed by the class name.
    .center {
        text-align: center;
        color: red;
        }

    ID-selector: uses the id attribute of an HTML element to select a specific element, To select an element with a specific id, write a hash (#) character, followed by the id of the element.
    #para1 {
        text-align: center;
        color: red;
        }

    Descendant-selectors (CSS combinators):
    A CSS selector can contain more than one simple selector. Between the simple selectors, we can include a combinator.
    There are four different combinators in CSS:
        -descendant selector (space)
        -child selector (>)
        -adjacent sibling selector (+)
        -general sibling selector (~)
    
    Descendant Selector:
    The descendant selector matches all elements that are descendants of a specified element.
    The following example selects all <p> elements inside <div> elements: 
        div p {
        background-color: yellow;
        }
    
    Child Selector (>)
    The child selector selects all elements that are the children of a specified element.
    The following example selects all <p> elements that are children of a <div> element:
        div > p {
        background-color: yellow;
        }

    Adjacent Sibling Selector (+)
    The adjacent sibling selector is used to select an element that is directly after another specific element.
    Sibling elements must have the same parent element, and "adjacent" means "immediately following".
    The following example selects the first <p> element that are placed immediately after <div> elements:
        div + p {
        background-color: yellow;
        }

    General Sibling Selector (~)
    The general sibling selector selects all elements that are next siblings of a specified element.
    The following example selects all <p> elements that are next siblings of <div> elements: 
        div ~ p {
        background-color: yellow;
        }
    
    CSS [attribute] Selector
    The [attribute] selector is used to select elements with a specified attribute.
    The following example selects all <a> elements with a target attribute:
        a[target="_blank"] {
        background-color: yellow;
        }

4. zie html file
5. zie html file
6. zie html file
7. zie html file

8.Styling die je toepast wordt toegepast in een bepaalde volgorde. Het kan voorkomen dat je styling toepast en vervolgens niet het gewenste resultaat ziet. Cascade en Inheritance zijn belangrijke concepten om te begrijpen hoe styling werkt. Lees hier in de officiÃ«le documentatie meer over cascade en inheritance.
Zoek ook andere referenties om het concept te begrijpen.
Leg in eigen woorden uit wat met cascade en inheritance wordt bedoeld. Maak voorbeelden om je antwoord uit te leggen.
(https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance)
(https://www.youtube.com/watch?v=N8tFrMZp_wA)

Initial CSS -> Initional vlaue defined by the formal CSS definition
Browser specific CSS -> default CSS values set by the browser (user agent stylesheet)
Custom CSS -> custom CSS

Inherit, always takes value from the parentcontainer

Cascading algorithm determines how to find the value to apply for each property for each document element
    -Revelance: Filters out all other rules that don't apply on the element
    -Origin and importance
    -Specificity